/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        Queue<TreeNode>q=new LinkedList<>();
         List<List<Integer>>res=new ArrayList<>();
        if(root==null)return res;
        q.offer(root);
        boolean dir=true;
       

        while(!q.isEmpty()){
            int level=q.size();
             List<Integer>ls=new ArrayList<>();

            for(int i=0;i<level;i++){
               
                TreeNode curr=q.poll();
                
                if(dir){
                    ls.add(curr.val);
                    
                }else{
                   ls.addFirst(curr.val);
                    
                }
                if(curr.left!=null)q.offer(curr.left);
                if(curr.right!=null)q.offer(curr.right);
               
            }
             dir=!dir;
             res.add(ls);
        }
        return res;
    }
}